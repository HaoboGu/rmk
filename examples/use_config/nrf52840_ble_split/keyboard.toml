[keyboard]
name = "RMK Keyboard"
product_name = "RMK Keyboard"
vendor_id = 0x4c4b
product_id = 0x4643
manufacturer = "haobo"
chip = "nrf52840"

[layout]
rows = 4
cols = 3
layers = 2
keymap = [
    [
        ["A", "B", "C"],
        ["Kc1", "Kc2", "Kc3"],
        ["LCtrl", "MO(1)", "LShift"],
        ["OSL(1)", "LT(2, Kc9)", "LM(1, LShift | LGui)"]
    ],
    [
        ["TD(1)", "TT(1)", "TG(2)"],
        ["TD(0)", "_", "_"],
        ["_", "_", "_"],
        ["_", "_", "_"]
    ],
]

[storage]

[ble]
enabled = true

[light]
# All light pins are high-active by default, uncomment if you want it to be low-active
capslock.pin = "P0_00"
capslock.low_active = true
numslock.pin = "P0_01"
numslock.low_active = false

[behavior]
tap_hold = { enable_hrm = true, prior_idle_time = "120ms", hold_timeout = "250ms" }

[[behavior.morse.morses]]
tap = "A"
hold = "WM(A, LShift)"
double_tap = "CapsLock"
hold_after_tap = "A"
timeout = "150ms"

[[behavior.morse.morses]]
tap = "Space"
hold = "LCtrl"

[[behavior.morse.morses]]
tap_actions = ["F1", "F2", "F3", "F4"]  # 1 tap = F1, 2 taps = F2, 3 taps = F3, 4 taps = F4
hold_actions = ["MO(1)", "MO(2)", "MO(3)", "MO(4)"]  # Hold after 1 tap = layer 1, etc.
timeout = "200ms"

[[behavior.morse.morses]]
tap_actions = ["Tab", "Escape", "CapsLock"]  # 1 tap = Tab, 2 taps = Escape, 3 taps = CapsLock
hold_actions = ["LCtrl", "LAlt", "LShift"]  # Hold after 1 tap = Ctrl, etc.
timeout = "250ms"

[split]
connection = "ble"

[split.central]
rows = 2
cols = 2
row_offset = 0
col_offset = 0
ble_addr = [0x18, 0xe2, 0x21, 0x80, 0xc0, 0xc7]

[split.central.matrix]
matrix_type = "normal"
# WARNING: Currently row2col/col2row is set in RMK's feature gate, row2col config here is valid ONLY when you're using cloud compilation
# Checkout documentation here: https://rmk.rs/docs/user_guide/faq.html#my-matrix-is-row2col-the-matrix-doesn-t-work
# row2col = true
input_pins = ["P0_12", "P0_13"]
output_pins = ["P0_14", "P0_15"]

[[split.peripheral]]
rows = 2
cols = 1
row_offset = 2
col_offset = 2
ble_addr = [0x7e, 0xfe, 0x73, 0x9e, 0x66, 0xe3]
[split.peripheral.matrix]
matrix_type = "normal"
input_pins = ["P1_11", "P1_10"]
output_pins = ["P0_30"]

# [[split.peripheral]]
# rows = 2
# cols = 1
# row_offset = 2
# col_offset = 2
# serial = [{ instance = "UART0", tx_pin = "PIN_0", rx_pin = "PIN_1" }]
# input_pins = ["PIN_9", "PIN_11"]
# output_pins = ["PIN_10"]
