name: Bloat

on:
  push:
    branches: ["main"]
    paths: ["examples/**", "rmk/**", "rmk-macro/**", "rmk-config/**"]
  pull_request:
    branches: ["main"]
    paths: ["examples/**", "rmk/**", "rmk-macro/**", "rmk-config/**"]
  workflow_dispatch:


# Cancel any currently running workflows from the same PR, branch, or
# tag when a new workflow is triggered.
#
# https://stackoverflow.com/a/66336834
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

env:
  CARGO_TERM_COLOR: always


jobs:
  binary-size:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example:
          - nrf52832_ble
          - nrf52840_ble
          - nrf52840_ble_split
          - rp2040
          - rp2040_split
          - rp2040_direct_pin
          - pi_pico_w_ble
          - pi_pico_w_ble_split
          - stm32f1
          - stm32f4
          - stm32h7
          - esp32c3_ble
          - esp32c6_ble
        example_type:
          - use_rust
          - use_config
        exclude:
          # ESP32 examples need special handling, exclude them for now
          - example: esp32c3_ble
          - example: esp32c6_ble
    outputs:
      size-results: ${{ steps.collect-sizes.outputs.size-results }}
    steps:
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: cargo-bins/cargo-binstall@main
      - uses: actions/cache@v3
        id: cache-cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./examples/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install tools
        run: |
          cargo binstall cargo-make flip-link -y
          rustup target add thumbv6m-none-eabi thumbv7em-none-eabihf thumbv7m-none-eabi riscv32imac-unknown-none-elf riscv32imc-unknown-none-elf
          rustup component add rust-src llvm-tools
      - if: steps.cache-cargo.outputs.cache-hit != 'true'
        run: cargo install cargo-binutils
      - name: Check out the repo with the full git history
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: Build new binary
        working-directory: ./examples/${{ matrix.example_type }}/${{ matrix.example }}
        run: cargo build --release
      - name: Calculate binary size
        working-directory: ./examples/${{ matrix.example_type }}/${{ matrix.example }}
        run: |
          echo "SIZE_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "## ${{ matrix.example_type }}/${{ matrix.example }}" >> $GITHUB_ENV
          echo '```' >> $GITHUB_ENV
          cargo size --release >> $GITHUB_ENV
          echo '```' >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        id: new-size
      - name: Find and save binary
        run: |
          # Find the binary file (it could be in different target directories)
          BINARY_PATH=$(find ./examples/${{ matrix.example_type }}/${{ matrix.example }}/target -name "rmk-*" -type f ! -name "*.d" ! -name "*.rlib" | head -1)
          if [ -n "$BINARY_PATH" ]; then
            ORIGINAL_PATH="${BINARY_PATH%/*}/original-${{ matrix.example }}-${{ matrix.example_type }}.elf"
            cp "$BINARY_PATH" "$ORIGINAL_PATH"
            echo "BINARY_PATH=$BINARY_PATH" >> $GITHUB_ENV
            echo "ORIGINAL_PATH=$ORIGINAL_PATH" >> $GITHUB_ENV
          else
            echo "No binary found for ${{ matrix.example_type }}/${{ matrix.example }}"
            exit 1
          fi
      - name: If it's a PR checkout the base commit
        if: ${{ github.event.pull_request }}
        run: git checkout -f ${{ github.event.pull_request.base.sha }}
      - name: Rebuild with the base commit
        if: ${{ github.event.pull_request }}
        working-directory: ./examples/${{ matrix.example_type }}/${{ matrix.example }}
        run: cargo build --release
      - name: Run Bloaty to compare both output files
        if: ${{ github.event.pull_request }}
        id: bloaty-comparison
        uses: carlosperate/bloaty-action@v1
        with:
          bloaty-args: ${{ env.ORIGINAL_PATH }} -- ${{ env.BINARY_PATH }}
          output-to-summary: false
      - name: Upload size results
        uses: actions/upload-artifact@v4
        with:
          name: size-results-${{ matrix.example }}-${{ matrix.example_type }}
          path: |
            /tmp/size-${{ matrix.example }}-${{ matrix.example_type }}.txt
        if: always()
        continue-on-error: true
      - name: Save size results to file
        run: |
          mkdir -p /tmp
          echo "${{ env.SIZE_OUTPUT }}" > /tmp/size-${{ matrix.example }}-${{ matrix.example_type }}.txt
          if [ "${{ github.event.pull_request }}" != "" ]; then
            echo "" >> /tmp/size-${{ matrix.example }}-${{ matrix.example_type }}.txt
            echo "### Diff" >> /tmp/size-${{ matrix.example }}-${{ matrix.example_type }}.txt
            echo '```' >> /tmp/size-${{ matrix.example }}-${{ matrix.example_type }}.txt
            echo "${{ steps.bloaty-comparison.outputs.bloaty-output-encoded }}" >> /tmp/size-${{ matrix.example }}-${{ matrix.example_type }}.txt
            echo '```' >> /tmp/size-${{ matrix.example }}-${{ matrix.example_type }}.txt
          fi

  build-esp32s3:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip:
          - esp32s3
        example_type:
          - use_rust
          - use_config
    steps:
      - uses: cargo-bins/cargo-binstall@main
      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: Install esp tools
        run: |
          cargo binstall ldproxy espup -y
          espup install
      - name: Build new binary
        working-directory: ./examples/${{ matrix.example_type }}/${{ matrix.chip }}_ble
        run: . /home/runner/export-esp.sh && cargo +esp build --release
      - name: Calculate binary size
        working-directory: ./examples/${{ matrix.example_type }}/${{ matrix.chip }}_ble
        run: |
          echo "SIZE_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "## ${{ matrix.example_type }}/${{ matrix.chip }}_ble" >> $GITHUB_ENV
          echo '```' >> $GITHUB_ENV
          . /home/runner/export-esp.sh && cargo +esp size --release >> $GITHUB_ENV
          echo '```' >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Find and save binary
        run: |
          BINARY_PATH=$(find ./examples/${{ matrix.example_type }}/${{ matrix.chip }}_ble/target -name "rmk-*" -type f ! -name "*.d" ! -name "*.rlib" | head -1)
          if [ -n "$BINARY_PATH" ]; then
            ORIGINAL_PATH="${BINARY_PATH%/*}/original-${{ matrix.chip }}-${{ matrix.example_type }}.elf"
            cp "$BINARY_PATH" "$ORIGINAL_PATH"
            echo "BINARY_PATH=$BINARY_PATH" >> $GITHUB_ENV
            echo "ORIGINAL_PATH=$ORIGINAL_PATH" >> $GITHUB_ENV
          fi
      - name: If it's a PR checkout the base commit
        if: ${{ github.event.pull_request }}
        run: git checkout -f ${{ github.event.pull_request.base.sha }}
      - name: Rebuild with the base commit
        if: ${{ github.event.pull_request }}
        working-directory: ./examples/${{ matrix.example_type }}/${{ matrix.chip }}_ble
        run: . /home/runner/export-esp.sh && cargo +esp build --release
      - name: Run Bloaty to compare both output files
        if: ${{ github.event.pull_request && env.BINARY_PATH != '' }}
        id: bloaty-comparison
        uses: carlosperate/bloaty-action@v1
        with:
          bloaty-args: ${{ env.ORIGINAL_PATH }} -- ${{ env.BINARY_PATH }}
          output-to-summary: false
      - name: Save size results to file
        run: |
          mkdir -p /tmp
          echo "${{ env.SIZE_OUTPUT }}" > /tmp/size-${{ matrix.chip }}-${{ matrix.example_type }}.txt
          if [ "${{ github.event.pull_request }}" != "" ] && [ -n "${{ steps.bloaty-comparison.outputs.bloaty-output-encoded }}" ]; then
            echo "" >> /tmp/size-${{ matrix.chip }}-${{ matrix.example_type }}.txt
            echo "### Diff" >> /tmp/size-${{ matrix.chip }}-${{ matrix.example_type }}.txt
            echo '```' >> /tmp/size-${{ matrix.chip }}-${{ matrix.example_type }}.txt
            echo "${{ steps.bloaty-comparison.outputs.bloaty-output-encoded }}" >> /tmp/size-${{ matrix.chip }}-${{ matrix.example_type }}.txt
            echo '```' >> /tmp/size-${{ matrix.chip }}-${{ matrix.example_type }}.txt
          fi
      - name: Upload size results
        uses: actions/upload-artifact@v4
        with:
          name: size-results-${{ matrix.chip }}-${{ matrix.example_type }}
          path: |
            /tmp/size-${{ matrix.chip }}-${{ matrix.example_type }}.txt
        if: always() # Always upload the size results even if some builds fail

  collect-and-comment:
    needs: 
      - binary-size
      - build-esp32s3
    runs-on: ubuntu-latest
    if: always() # Always upload the size results even if some builds fail
    permissions:
      actions: read
      pull-requests: write
    steps:
      - name: Download all size results
        uses: actions/download-artifact@v3
        with:
          path: ./size-results
      - name: Combine all size results
        run: |
          echo "# Binary Size Report" > combined-sizes.md
          echo "" >> combined-sizes.md
          
          # Process all size result files
          for result_dir in ./size-results/size-results-*/; do
            if [ -d "$result_dir" ]; then
              for file in "$result_dir"*.txt; do
                if [ -f "$file" ]; then
                  cat "$file" >> combined-sizes.md
                  echo "" >> combined-sizes.md
                fi
              done
            fi
          done
          
          # Read the combined results
          echo "COMBINED_RESULTS<<EOF" >> $GITHUB_ENV
          cat combined-sizes.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Add a PR comment with all size results
        if: ${{ github.event.pull_request }}
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.COMBINED_RESULTS
            })